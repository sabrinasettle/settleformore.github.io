{"expireTime":9007200864194278000,"key":"gatsby-plugin-mdx-entire-payload-f42e4021b6b39052bc35a31b112047cb-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"While working on Circe, an academic analytical dashboard I found something interesting about using Chartkick and Chart.js. Using the documented method it would be: ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":165,"offset":165},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":165,"offset":165},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"<%= column_chart Model.group_by_custom_method, colors: [\"#3D71BF\", \"#3DC7A6\"], class: \"chart\",  width: \"300px\", height: \"250px\" %>","position":{"start":{"line":4,"column":1,"offset":167},"end":{"line":4,"column":135,"offset":301},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":167},"end":{"line":4,"column":135,"offset":301},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Building a column graph with multiple colors is actually pretty weird. So here's the hack:","position":{"start":{"line":6,"column":1,"offset":303},"end":{"line":6,"column":91,"offset":393},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":303},"end":{"line":6,"column":91,"offset":393},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"<%= column_chart Model.group_by_custom_method, colors: [[\"#3D71BF\", \"#3DC7A6\"]], class: \"chart\",  width: \"300px\", height: \"250px\" %>","position":{"start":{"line":8,"column":1,"offset":395},"end":{"line":8,"column":137,"offset":531},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":395},"end":{"line":8,"column":137,"offset":531},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You place the array of colors, in another array. Strange right? I found this answer on Stack Overflow. Hopefully will be able to link it later when I find it again. ","position":{"start":{"line":10,"column":1,"offset":533},"end":{"line":10,"column":166,"offset":698},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":533},"end":{"line":10,"column":166,"offset":698},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hack Number One - Chartkick\",\"slug\":null,\"path\":\"/blog/hack-number-one\",\"date\":\"2020-11-06T00:00:00.000Z\",\"published\":true,\"featuredImage\":null,\"tags\":[\"hacks\",\"web development\"]}","position":{"start":{"line":12,"column":1,"offset":700},"end":{"line":12,"column":218,"offset":917},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":12,"column":218,"offset":917}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hack Number One - Chartkick\",\n  \"slug\": null,\n  \"path\": \"/blog/hack-number-one\",\n  \"date\": \"2020-11-06T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": null,\n  \"tags\": [\"hacks\", \"web development\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"While working on Circe, an academic analytical dashboard I found something interesting about using Chartkick and Chart.js. Using the documented method it would be: \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<%= column_chart Model.group_by_custom_method, colors: [\\\"#3D71BF\\\", \\\"#3DC7A6\\\"], class: \\\"chart\\\",  width: \\\"300px\\\", height: \\\"250px\\\" %>\")), mdx(\"p\", null, \"Building a column graph with multiple colors is actually pretty weird. So here's the hack:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<%= column_chart Model.group_by_custom_method, colors: [[\\\"#3D71BF\\\", \\\"#3DC7A6\\\"]], class: \\\"chart\\\",  width: \\\"300px\\\", height: \\\"250px\\\" %>\")), mdx(\"p\", null, \"You place the array of colors, in another array. Strange right? I found this answer on Stack Overflow. Hopefully will be able to link it later when I find it again. \"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hack Number One - Chartkick\",\n  \"slug\": null,\n  \"path\": \"/blog/hack-number-one\",\n  \"date\": \"2020-11-06T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": null,\n  \"tags\": [\"hacks\", \"web development\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`While working on Circe, an academic analytical dashboard I found something interesting about using Chartkick and Chart.js. Using the documented method it would be: `}</p>\n    <p><inlineCode parentName=\"p\">{`<%= column_chart Model.group_by_custom_method, colors: [\"#3D71BF\", \"#3DC7A6\"], class: \"chart\",  width: \"300px\", height: \"250px\" %>`}</inlineCode></p>\n    <p>{`Building a column graph with multiple colors is actually pretty weird. So here's the hack:`}</p>\n    <p><inlineCode parentName=\"p\">{`<%= column_chart Model.group_by_custom_method, colors: [[\"#3D71BF\", \"#3DC7A6\"]], class: \"chart\",  width: \"300px\", height: \"250px\" %>`}</inlineCode></p>\n    <p>{`You place the array of colors, in another array. Strange right? I found this answer on Stack Overflow. Hopefully will be able to link it later when I find it again. `}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}