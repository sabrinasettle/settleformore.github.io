{"expireTime":9007200853744428000,"key":"gatsby-plugin-mdx-entire-payload-e9cff0dc2f05c078f5c1520875e71dcb-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Heading","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":10,"offset":9},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":10,"offset":9},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"h2 Heading","position":{"start":{"line":2,"column":4,"offset":13},"end":{"line":2,"column":14,"offset":23},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":10},"end":{"line":2,"column":14,"offset":23},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"h3 Heading","position":{"start":{"line":4,"column":5,"offset":29},"end":{"line":4,"column":15,"offset":39},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":25},"end":{"line":4,"column":15,"offset":39},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"My first post!!","position":{"start":{"line":6,"column":1,"offset":41},"end":{"line":6,"column":16,"offset":56},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":41},"end":{"line":6,"column":16,"offset":56},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252","children":[{"type":"text","value":"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252","position":{"start":{"line":9,"column":1,"offset":59},"end":{"line":9,"column":61,"offset":119},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":59},"end":{"line":9,"column":61,"offset":119},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":59},"end":{"line":9,"column":61,"offset":119},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hello World - from mdx!\",\"slug\":\"first\",\"path\":\"/blog/first-post\",\"date\":\"2020-08-31T00:00:00.000Z\",\"published\":true,\"featuredImage\":\"./src/images/i7.png\"}","position":{"start":{"line":11,"column":1,"offset":121},"end":{"line":11,"column":194,"offset":314},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":194,"offset":314}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello World - from mdx!\",\n  \"slug\": \"first\",\n  \"path\": \"/blog/first-post\",\n  \"date\": \"2020-08-31T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": \"./src/images/i7.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Heading\"), mdx(\"h2\", null, \"h2 Heading\"), mdx(\"h3\", null, \"h3 Heading\"), mdx(\"p\", null, \"My first post!!\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252\"\n  }), \"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hello World - from mdx!\",\n  \"slug\": \"first\",\n  \"path\": \"/blog/first-post\",\n  \"date\": \"2020-08-31T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": \"./src/images/i7.png\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Heading`}</h1>\n    <h2>{`h2 Heading`}</h2>\n    <h3>{`h3 Heading`}</h3>\n    <p>{`My first post!!`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252\"\n      }}>{`https://github.com/ChristopherBiscardi/gatsby-mdx/issues/252`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}