{"expireTime":9007200864194278000,"key":"gatsby-plugin-mdx-entire-payload-bd01f376e5ac69e0370f55ffa3cce4b7-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"For the most part of 2020, I have been employed as an academics officer and staff software engineer at the experimental 42 Silicon Valley. This week I was made redundant by a move to a fully remote and online curriculum change. This move closes the campus but opens up for more part-time studies for students. On this close of a part of my life I have taken some time to just sit and gather my thoughts. ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":405,"offset":405},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":405,"offset":405},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One of my main projects during my time was adding new features to some legacy code powering a web application, which will be shut down after a time due to the campus closing. This legacy code was difficult even to work with at a simple level. It solidified my opinion that its important to understand the main concepts of a chosen framework and the languages used. Bloating Rails and making Ruby look like the logic of the C language is ridiculous in the time of Google, Medium, public libraries, and Youtube. Researching a framework is understanding that the controllers and models should stay slim in Rails, to do this: utilize the helpers, concerns, and tasks that are already in the structure of the framework.","position":{"start":{"line":4,"column":1,"offset":407},"end":{"line":4,"column":715,"offset":1121},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":407},"end":{"line":4,"column":715,"offset":1121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But why is this important? Let me tell you: the technical debt. ","position":{"start":{"line":6,"column":1,"offset":1123},"end":{"line":6,"column":65,"offset":1187},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":1123},"end":{"line":6,"column":65,"offset":1187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The amount of time for building those features took double the time because the code base was a jungle of incorrect controller names, weird join tables, and class methods that were not clear.","position":{"start":{"line":8,"column":1,"offset":1189},"end":{"line":8,"column":192,"offset":1380},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":1189},"end":{"line":8,"column":192,"offset":1380},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It also created more bugs. More future cleanup and time needed.","position":{"start":{"line":10,"column":1,"offset":1382},"end":{"line":10,"column":64,"offset":1445},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":1382},"end":{"line":10,"column":64,"offset":1445},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I know this could've (mostly) been avoided by a great base architecture and database design with considerations for scalability, and also just working properly with the framework of your choice, rather than against its conceptual principles.","position":{"start":{"line":12,"column":1,"offset":1447},"end":{"line":12,"column":242,"offset":1688},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1447},"end":{"line":12,"column":242,"offset":1688},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"End of an era (and my thoughts on it) - Part One\",\"slug\":\"end-of-an-era-part-one\",\"path\":\"/blog/end-of-an-era-part-one\",\"date\":\"2020-10-25T00:00:00.000Z\",\"published\":true,\"featuredImage\":null,\"tags\":[\"web development\",\"systems\"]}","position":{"start":{"line":14,"column":1,"offset":1690},"end":{"line":14,"column":268,"offset":1957},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":14,"column":268,"offset":1957}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"End of an era (and my thoughts on it) - Part One\",\n  \"slug\": \"end-of-an-era-part-one\",\n  \"path\": \"/blog/end-of-an-era-part-one\",\n  \"date\": \"2020-10-25T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": null,\n  \"tags\": [\"web development\", \"systems\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For the most part of 2020, I have been employed as an academics officer and staff software engineer at the experimental 42 Silicon Valley. This week I was made redundant by a move to a fully remote and online curriculum change. This move closes the campus but opens up for more part-time studies for students. On this close of a part of my life I have taken some time to just sit and gather my thoughts. \"), mdx(\"p\", null, \"One of my main projects during my time was adding new features to some legacy code powering a web application, which will be shut down after a time due to the campus closing. This legacy code was difficult even to work with at a simple level. It solidified my opinion that its important to understand the main concepts of a chosen framework and the languages used. Bloating Rails and making Ruby look like the logic of the C language is ridiculous in the time of Google, Medium, public libraries, and Youtube. Researching a framework is understanding that the controllers and models should stay slim in Rails, to do this: utilize the helpers, concerns, and tasks that are already in the structure of the framework.\"), mdx(\"p\", null, \"But why is this important? Let me tell you: the technical debt. \"), mdx(\"p\", null, \"The amount of time for building those features took double the time because the code base was a jungle of incorrect controller names, weird join tables, and class methods that were not clear.\"), mdx(\"p\", null, \"It also created more bugs. More future cleanup and time needed.\"), mdx(\"p\", null, \"I know this could've (mostly) been avoided by a great base architecture and database design with considerations for scalability, and also just working properly with the framework of your choice, rather than against its conceptual principles.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"End of an era (and my thoughts on it) - Part One\",\n  \"slug\": \"end-of-an-era-part-one\",\n  \"path\": \"/blog/end-of-an-era-part-one\",\n  \"date\": \"2020-10-25T00:00:00.000Z\",\n  \"published\": true,\n  \"featuredImage\": null,\n  \"tags\": [\"web development\", \"systems\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`For the most part of 2020, I have been employed as an academics officer and staff software engineer at the experimental 42 Silicon Valley. This week I was made redundant by a move to a fully remote and online curriculum change. This move closes the campus but opens up for more part-time studies for students. On this close of a part of my life I have taken some time to just sit and gather my thoughts. `}</p>\n    <p>{`One of my main projects during my time was adding new features to some legacy code powering a web application, which will be shut down after a time due to the campus closing. This legacy code was difficult even to work with at a simple level. It solidified my opinion that its important to understand the main concepts of a chosen framework and the languages used. Bloating Rails and making Ruby look like the logic of the C language is ridiculous in the time of Google, Medium, public libraries, and Youtube. Researching a framework is understanding that the controllers and models should stay slim in Rails, to do this: utilize the helpers, concerns, and tasks that are already in the structure of the framework.`}</p>\n    <p>{`But why is this important? Let me tell you: the technical debt. `}</p>\n    <p>{`The amount of time for building those features took double the time because the code base was a jungle of incorrect controller names, weird join tables, and class methods that were not clear.`}</p>\n    <p>{`It also created more bugs. More future cleanup and time needed.`}</p>\n    <p>{`I know this could've (mostly) been avoided by a great base architecture and database design with considerations for scalability, and also just working properly with the framework of your choice, rather than against its conceptual principles.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}